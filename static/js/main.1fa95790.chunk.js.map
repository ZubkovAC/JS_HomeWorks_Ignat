{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/Header.module.css","p1-main/m1-ui/u1-app/switch/index.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p1-main/m1-ui/u1-app/switch/css/style.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css"],"names":["module","exports","Switch","props","className","css","wrapper","switch_box","box_3","toggle_switch","type","switch_3","onClick","cheked","checkbox","xmlns","viewBox","outer_ring","d","fill","stroke","stroke-width","stroke-linecap","stroke-miterlimit","is_checked","is_unchecked","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","buttonCallback","finalSpanClassName","s","errorText","finalInputClassName","errorInputTrue","errorInputFalse","Input","e","currentTarget","value","key","buttonErrorFalse","buttonErrorTrue","alert","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","span","editable","SuperButton","red","title","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","style","margin","undefined","PreJunior","color","Error404","homeWorkReducer","action","copy","payload","sort","a","b","name","reverse","filter","t","age","initialPeople","_id","HW8","people","setPeople","finalPeople","map","p","display","Junior","justifyContent","alignItems","JuniorPlus","PATH","Routes","path","exact","render","to","Header","accordion","setAccordion","class","menu","menu_active","href","menu_btm","menu_list","header","activeClassName","active","HW5","img","one","App","src","GOD","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1fa95790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2SPbw\",\"GOD\":\"App_GOD__cZazY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__3gOwx\",\"editable\":\"SuperEditableSpan_editable__1W5Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__39UlY\",\"red\":\"SuperButton_red__1PzMB\",\"buttonErrorFalse\":\"SuperButton_buttonErrorFalse__lwD2W\",\"buttonErrorTrue\":\"SuperButton_buttonErrorTrue__3Q0TR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ZqWuw\",\"active\":\"Header_active__2-3F0\",\"disabled\":\"Header_disabled__343H8\",\"wrapper\":\"Header_wrapper__vjS0t\",\"menu\":\"Header_menu__3QKDQ\",\"menu_active\":\"Header_menu_active__nzPT_\",\"menu_list\":\"Header_menu_list__2QqV_\",\"menu_btm\":\"Header_menu_btm__3yX1U\"};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport css from \"./css/style.module.css\"\r\n\r\n\r\nexport function Switch(props:any) {\r\n    return (\r\n\r\n        <div className={css.wrapper}>\r\n\r\n            <div className={`${css.switch_box} ${css.box_3}`}>\r\n                <div className={css.toggle_switch}>\r\n                    <input type=\"checkbox\" className={css.switch_3} onClick={props.cheked}/>\r\n                        <svg className={css.checkbox} xmlns=\"http://www.w3.org/2000/svg\" //style=\"isolation:isolate\"\r\n                             viewBox=\"0 0 168 80\">\r\n                            <path className={css.outer_ring}\r\n                                  d=\"M41.534 9h88.932c17.51 0 31.724 13.658 31.724 30.482 0 16.823-14.215 30.48-31.724 30.48H41.534c-17.51 0-31.724-13.657-31.724-30.48C9.81 22.658 24.025 9 41.534 9z\"\r\n                                  fill=\"none\" stroke=\"#233043\" stroke-width=\"3\" stroke-linecap=\"square\"\r\n                                  stroke-miterlimit=\"3\"/>\r\n                            <path className={css.is_checked}\r\n                                  d=\"M17 39.482c0-12.694 10.306-23 23-23s23 10.306 23 23-10.306 23-23 23-23-10.306-23-23z\"/>\r\n                            <path className={css.is_unchecked}\r\n                                  d=\"M132.77 22.348c7.705 10.695 5.286 25.617-5.417 33.327-2.567 1.85-5.38 3.116-8.288 3.812 7.977 5.03 18.54 5.024 26.668-.83 10.695-7.706 13.122-22.634 5.418-33.33-5.855-8.127-15.88-11.474-25.04-9.23 2.538 1.582 4.806 3.676 6.66 6.25z\"/>\r\n                        </svg>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n)}\r\n","import React, {\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n    buttonCallback?:(a:any)=>void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        buttonCallback,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement> ) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    const onChangeCallbackButton =()=> {\r\n       alert('hello')\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.errorText} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ?`${s.errorInputTrue} `:`${s.errorInputFalse} ` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div className={s.Input}>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <button className={error?  s.buttonErrorFalse : s.buttonErrorTrue  } onClick={onChangeCallbackButton} >\r\n                    add\r\n            </button>\r\n            <div className={finalSpanClassName}>\r\n\r\n                {error && <div className={finalSpanClassName}>{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport css from './SuperEditableSpan.module.css'\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)// setEditMode(); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)   // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)// setEditMode(); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${css.span} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                        <div className={css.editable}>editable text</div>\r\n                    </span>\r\n\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    title?:string\r\n    onClick?:()=>void\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,title,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    //const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n    //const finalClassName={ props.error? s.buttonErrorTrue : s.buttonErrorFalse}\r\n    return (\r\n        <button\r\n            className={red? s.buttonErrorTrue : s.buttonErrorFalse }\r\n            //className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\r\n        >{title}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\",value))\r\n    };\r\n\r\n    return (\r\n        <div style={{margin:'20px'}}>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton title={'save'} onClick={save}/>\r\n            <SuperButton title={'restore'} onClick={restore}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div style={{color:'white'}}>\r\n         {/*   <HW1/>\r\n            <HW2/>\r\n            <HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","type homeWorkReducerType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nexport const homeWorkReducer = (state: homeWorkReducerType[], action: ActionType): homeWorkReducerType[] => {\r\n    switch (action.type) {\r\n        case \"sort\": {\r\n            let copy = [...state]\r\n            if (action.payload === \"up\"){\r\n                copy.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                return  copy\r\n            }else if (action.payload === \"down\"){\r\n                copy.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                return  copy.reverse()\r\n            }\r\n        }\r\n\r\n        case \"check\": {\r\n            return state.filter(t => t.age >= action.payload ? {...t} : '')\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const sortUp = (payload: string) => ({type: 'sort', payload} as const)\r\nexport const sortDown = (payload: string) => ({type: 'sort', payload} as const)\r\nexport const sortCheck = (payload: number) => ({type: 'check', payload} as const)\r\n\r\n\r\ntype ActionType =\r\n    SortUp | SortDown | SortCheck\r\n\r\n\r\nexport type SortUp = ReturnType<typeof sortUp>\r\nexport type SortDown = ReturnType<typeof sortDown>\r\nexport type SortCheck = ReturnType<typeof sortCheck>","import React, {useState} from \"react\";\r\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div style={{display:'flex'}} key={p._id}>\r\n            <div>\r\n                name : <b style={{color:'red'}}>{p.name} </b>\r\n            </div>\r\n\r\n            <div>\r\n                age : <b>{p.age}</b>\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\r\n    const sortCheck = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\r\n\r\n\r\n    return (\r\n        <div >\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            <div><SuperButton title={'sort Up'} onClick={sortUp}/></div>\r\n            <div><SuperButton title={'sort Down'} onClick={sortDown}/></div>\r\n            <div><SuperButton title={'sort Check'} onClick={sortCheck}/></div>\r\n            <div>sort down</div>\r\n\r\n            check 18\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nexport const Junior = () => {\r\n    return(\r\n        <div style={{color:'white',display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <h2 style={{color:'white',margin:'50px'}}>Hello!!!</h2>\r\n            {/*<HW7/>*/}\r\n            <HW8/>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const JuniorPlus = () => {\r\n    return(\r\n        <div style={{color:'white'}}>\r\n            <h2>Hello!!!HELLO!!!</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Route, Redirect, Switch} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre_junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: '/junior_plus'\r\n\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                {/* // add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport css from './Header.module.css';\r\nimport {PATH} from \"./Routes\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction Header() {\r\n\r\n    const [accordion, setAccordion] = useState(true)\r\n    const menu = () => {\r\n        setAccordion(!accordion)\r\n    }\r\n\r\n    return (\r\n        <div className={css.wrapper}>\r\n            <div className={css.class}>\r\n                <div className={accordion ? css.menu : css.menu_active}>\r\n                    <a href=\"#\" className={css.menu_btm} onClick={menu}> </a>\r\n                    <nav className={css.menu_list}>\r\n                        <NavLink to={PATH.PRE_JUNIOR} className={css.header}\r\n                                 activeClassName={css.active}> PRE_JUNIOR</NavLink>\r\n                        <NavLink to={PATH.JUNIOR} className={css.header}\r\n                                 activeClassName={css.active}> JUNIOR</NavLink>\r\n                        <NavLink to={PATH.JUNIOR_PLUS} className={css.header}\r\n                                 activeClassName={css.active}>JUNIOR_PLUS</NavLink>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from './App.module.css'\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport {Switch} from \"./switch\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nlet img = 1\r\nlet one = 'https://images.wallpaperscraft.ru/image/gory_noch_more_115661_3840x2400.jpg'\r\nconst cheked =()=>{\r\n    img +=1\r\n    if (img %2 ){\r\n        one = 'https://w-dog.ru/wallpapers/9/18/476035417475237.jpg'\r\n    }\r\n    else {\r\n        one = 'https://images.wallpaperscraft.ru/image/gory_noch_more_115661_3840x2400.jpg'\r\n    }\r\n}\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <Switch cheked={cheked}/>\r\n            <div>\r\n                <img src={one}/>\r\n            </div>\r\n\r\n\r\n\r\n            <div className={s.GOD}>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport React from \"react\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__uB1uE\",\"switch_box\":\"style_switch_box__17cUM\",\"box_3\":\"style_box_3__tVXDi\",\"toggle_switch\":\"style_toggle_switch__3-mWQ\",\"switch_3\":\"style_switch_3__s3x_z\",\"checkbox\":\"style_checkbox__1yBnV\",\"outer_ring\":\"style_outer_ring__kdf-H\",\"resetRing\":\"style_resetRing__fiSYh\",\"outer-ring\":\"style_outer-ring__XwA_0\",\"animateRing\":\"style_animateRing__1FJW3\",\"is_checked\":\"style_is_checked__1ajQ9\",\"is_unchecked\":\"style_is_unchecked__2Agg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__TgY3U\",\"Input\":\"SuperInputText_Input__1-vJP\",\"errorInputTrue\":\"SuperInputText_errorInputTrue__2Fzv5\",\"errorInputFalse\":\"SuperInputText_errorInputFalse__qzFmL\",\"errorText\":\"SuperInputText_errorText__23WQf\",\"errorSuperInput\":\"SuperInputText_errorSuperInput__aj-vY\",\"buttonErrorFalse\":\"SuperInputText_buttonErrorFalse__2xWis\",\"buttonErrorTrue\":\"SuperInputText_buttonErrorTrue__tGYKl\"};"],"sourceRoot":""}